{"version":3,"sources":["components/Users/Spinner-1s-200px.svg","common/FormsControls/FormStyles.module.css","components/Sidebar/nav/nav.jsx","components/Sidebar/Sidebar.jsx","components/Messages/Nav_messages/Nav_content/Nav_content.jsx","components/Messages/Nav_messages/Nav_messages.jsx","components/Messages/Nav_messages/Nav_messages_container.jsx","redux/messagesReducer.js","Utils/Validators/validators.js","common/FormsControls/formsControl.js","components/Messages/Enter_messages/Enter_messages.jsx","components/Messages/Enter_messages/Enter_messages_container.jsx","components/Messages/Content_messages/Container_content/Container_content.jsx","components/Messages/Content_messages/Content_messages.jsx","components/Messages/Content_messages/Content_messages_container.jsx","components/Messages/Dialogs.jsx","HOC/AuthRedirect.js","components/Messages/DialogsContainer.jsx","API/api.js","components/Users/Users.jsx","redux/usersReducer.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","redux/auth-reducer.js","redux/appReducer.js","components/Header/Burger.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","Login/Login.jsx","components/Profile/body_Profile/body_Profile_Flex/ProfileStatusWithHooks.jsx","components/Profile/body_Profile/body_Profile_Flex/body_Profile_Flex.jsx","components/Profile/body_Profile/Posts/Post.jsx","components/Profile/body_Profile/Posts/Posts.jsx","redux/profileReducer.js","components/Profile/body_Profile/Posts/PostsContainer.jsx","components/Profile/body_Profile/body_Profile.jsx","components/Profile/Profile.jsx","components/Profile/ProfileCotainer.jsx","App.js","serviceWorker.js","redux/Store.js","index.js"],"names":["module","exports","Nav","className","to","Sidebar","Nav_content","props","id_message","id_user","Nav_messages","Nav_main_messages","Messages","map","m","id","Nav_messages_container","connect","state","initialState","Container_content","content","requierd","value","undefined","maxLengthCreator","maxLength","length","Textarea","input","meta","hasError","touched","error","styles","text","Span","Inputarea","maxLength10","FormReduxMessages","reduxForm","form","onSubmit","handleSubmit","Field","validate","component","name","placeholder","Enter_messages","value_area_message","send_post","sendMessageCreator","values","dispatch","area_messages","reset","Enter_messages_container","type","Content_messages","Container_main_content","c","Content_messages_container","Dialogs","isAuth","mapStateToPropsForRedirect","auth","AuthRedirect","Component","RedirectComponent","this","React","DialogsContainer","compose","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","console","warn","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","delete","Users","pagesCount","Math","ceil","totalUsersCount","pages","i","push","p","onClick","e","onPageChanged","users","u","key","src","photos","small","alt","followed","disabled","followingInProgress","some","follow","unfollow","isFetching","fake","setCurrentPage","toggleIsFetching","toggleFollowingProgress","usersReducer","action","count","filter","getUsersList","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainers","pageNumber","getUsers","Preloader","mapDispatchToProps","resultCode","items","totalCount","require","act","login","setAuthUserData","payload","Auth","authReducer","initialized","side","setSidebar","sides","appReducer","Burger","alert","Header","Logout","HeaderContainer","app","LoginReduxForm","style","Login","message","messages","stopSubmit","_error","formData","ProfileStatusWithHooks","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onKeyDown","event","keyCode","autoFocus","onBlurCapture","onChange","currentTarget","Body_Frofile_flex","profile","large","fullName","lookingForAJob","contacts","github","vk","facebook","instagram","twitter","website","youtube","mainLink","Post","likes","FormReduxPost","cols","rows","Posts","Post_info_main","Profile","Post_info","store","sendPostCreator","value_Arrea","PostsContainer","Body_Profile","ProfileContainer","match","params","authorizedUserId","history","getUsersProfile","withRouter","App","initializeApp","path","render","UsersContainer","promise","Promise","all","Boolean","window","location","hostname","reducers","combineReducers","bancha","newPost","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b7d5ef30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Spinner-1s-200px.7cbb439d.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"FormStyles_text__1RjHB\",\"Span\":\"FormStyles_Span__TnsF2\",\"error\":\"FormStyles_error__1C_T_\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction Nav() {\r\n  return (\r\n    <nav className=\"nav_main\">\r\n      <ul className=\"nav_main_list\">\r\n        <li>\r\n          <NavLink to=\"/Profile\">Profile</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Messages\">Messages</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Users\">Users</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/News\">News</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Music\">Music</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/Settings\">Settings</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport Nav from './nav/nav'\r\nfunction Sidebar() {\r\n  return (\r\n    <section className=\"sidebar\">\r\n       <Nav />\r\n    </section>\r\n  );\r\n}\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction Nav_content(props) {\r\n  return (\r\n    <div className=\"text_dialog_1\">\r\n      <ul>\r\n        <li>\r\n          <NavLink to ={\"/Messages/\" + props.id_message}>{props.id_user}</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Nav_content","import React from \"react\";\r\nimport Nav_content from \"./Nav_content/Nav_content\";\r\nfunction Nav_messages(props) {\r\n  let state = props.Messages\r\n  let Nav_main_messages = state.Nav_messages.map((m) =>(<Nav_content id_message = {m.id_message} id_user = {m.id_user}/> ))\r\n  \r\n  return (\r\n    <div className=\"wrapper_dialog_1\" id=\"nav_messages\">\r\n      {Nav_main_messages}\r\n    </div>\r\n    \r\n  );\r\n}\r\nexport default Nav_messages;\r\n","import React from \"react\";\r\nimport Nav_messages from \"./Nav_messages\";\r\nimport { connect } from \"react-redux\";\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n    Messages: state.Messages\r\n  }\r\n}\r\nconst Nav_messages_container = connect(mapStateToProps)(Nav_messages)\r\nexport default Nav_messages_container;\r\n","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nlet initialState = {\r\n  Nav_messages: [\r\n    { id_user: \"Nikita\", id_message: 1 },\r\n    { id_user: \"Anya\", id_message: 2 },\r\n    { id_user: \"Slava\", id_message: 3 },\r\n    { id_user: \"Dasha\", id_message: 4 },\r\n    { id_user: \"Alexander\", id_message: 5 },\r\n  ],\r\n  Container_content: [\r\n    { content: \"hu\" },\r\n    { content: \"hu\" },\r\n    { content: \"hu\" },\r\n    { content: \"hu\" },\r\n    { content: \"hu\" },\r\n  ],\r\n};\r\nexport const messagesReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let value = action.area_messages;\r\n      return {\r\n        ...state,\r\n        Nav_messages: [\r\n          ...state.Nav_messages,\r\n          { id_user: \"Sender\", id_message: 6 },\r\n        ],\r\n        Container_content: [...state.Container_content, { content: value }],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const sendMessageCreator = (area_messages) => {\r\n  return {\r\n    type: SEND_MESSAGE,\r\n    area_messages,\r\n  };\r\n};\r\n","export const requierd = value => (value || typeof value === 'string' ? undefined : 'Required')\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined;\r\n};\r\n","import React from \"react\";\r\nimport styles from \"./FormStyles.module.css\";\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={hasError ? styles.text : \"\"}>\r\n      <textarea {...input} {...props}></textarea>\r\n      {hasError && <span className={styles.Span}>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Inputarea = ({ input, meta, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n  \r\n    return (\r\n      <div className={hasError ? styles.text : \"\"}>\r\n        <input {...input} {...props}></input>\r\n        {hasError && <span className={styles.Span}>{meta.error}</span>}\r\n      </div>\r\n    );\r\n  };","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { requierd, maxLengthCreator } from \"../../../Utils/Validators/validators\";\r\nimport { Textarea } from \"../../../common/FormsControls/formsControl\";\r\nimport {reset} from 'redux-form';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nfunction Enter_messages(props) {\r\n  let state = props.Messages;\r\n  let send_post = () => {\r\n    props.sendMessageCreator();\r\n  };\r\n  let addNewMessages = (values, dispatch) => {\r\n    props.sendMessageCreator(values.area_messages);\r\n    dispatch(reset('Dialogs'))\r\n  };\r\n  return (\r\n    <div className=\"enter_wrapper\">\r\n      <FormReduxMessages\r\n        value={state.value_area_message}\r\n        send_post={send_post}\r\n        onSubmit={addNewMessages}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FormMessages(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        validate = {[requierd, maxLength10]}\r\n        component= {Textarea}\r\n        name=\"area_messages\"\r\n        value={props.value}\r\n        placeholder=\"Enter your message...\"\r\n      ></Field>\r\n      <button>Send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst FormReduxMessages = reduxForm({ form: \"Dialogs\" })(FormMessages);\r\n\r\nexport default Enter_messages;\r\n","import React from \"react\";\r\nimport { sendMessageCreator } from \"../../../redux/messagesReducer\";\r\nimport Enter_messages from \"./Enter_messages\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    Messages: state.Messages,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessageCreator: (area_messages) => {\r\n      dispatch(sendMessageCreator(area_messages));\r\n    },\r\n  };\r\n};\r\nconst Enter_messages_container = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Enter_messages);\r\nexport default Enter_messages_container;\r\n","import React from \"react\";\r\nfunction Container_content(props) {\r\n  return (\r\n    <div className=\"text_dialog_2\">\r\n      <ul>\r\n        <li>{props.content}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\nexport default Container_content","import React from \"react\";\r\nimport Container_content from \"./Container_content/Container_content\";\r\nfunction Content_messages(props) {\r\n  let state = props.Messages;\r\n  let Container_main_content = state.Container_content.map((c) =>(<Container_content  content = {c.content} />))\r\n  return (\r\n    <div className=\"wrapper_dialog_2\" id=\"content_messages\">\r\n      {Container_main_content}\r\n    </div>\r\n  );\r\n}\r\nexport default Content_messages;\r\n","import Content_messages from \"./Content_messages\";\r\nimport { connect } from \"react-redux\";\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    Messages: state.Messages,\r\n  };\r\n};\r\nconst Content_messages_container = connect(mapStateToProps)(Content_messages);\r\nexport default Content_messages_container;\r\n","import React from \"react\";\r\nimport Nav_messages_container from \"./Nav_messages/Nav_messages_container\";\r\nimport Enter_messages_container from \"./Enter_messages/Enter_messages_container\";\r\nimport Content_messages_container from \"./Content_messages/Content_messages_container\";\r\nimport Nav from \"../Sidebar/nav/nav\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nfunction Dialogs(props) {\r\n  if (!props.isAuth) return <Redirect to = '/Login'/>\r\n  return (\r\n    <section className=\"Dialogs\">\r\n      <div className=\"main_wrapper_dialogs\">\r\n        <Nav_messages_container />\r\n        <Content_messages_container />\r\n      </div>\r\n      <Enter_messages_container />\r\n    </section>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import { Component } from \"react\";\r\nimport React from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>{\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const AuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if (!this.props.isAuth) return <Redirect to = '/Login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent)\r\n    return  ConnectedAuthRedirectComponent;\r\n}   ","import Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux'\r\nimport { AuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { compose } from 'redux';\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        \r\n    }\r\n}\r\nconst DialogsContainer = compose(connect(mapStateToProps), AuthRedirect)(Dialogs)\r\n\r\nexport default DialogsContainer ","import * as axios from \"axios\";\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: { \"API-KEY\": \"fd8ccc47-e38b-49c7-bdba-040f8dcf3a85\" },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(`follow/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(`follow/${userId}`).then((response) => {\r\n      return response.data;\r\n    });\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolute method. Please profileAPI objects\");\r\n    return profileAPI.getProfile(userId);\r\n  },\r\n};\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/` + userId);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/` + userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put(`profile/status`, { status: status });\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false){\r\n    return instance.post(`auth/login`, {email, password, rememberMe});\r\n  },\r\n  logout(){\r\n    return instance.delete(`auth/login`);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport  * as axios from \"axios\";\r\nimport { usersAPI } from \"../../API/api\";\r\n\r\nfunction Users(props) {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i < pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n  return (\r\n    <div className=\"ban_U\">\r\n      <div className=\"nav_usera\">\r\n        {pages.map((p) => {\r\n          return (\r\n            <span\r\n              className={props.currentPage === p && \"selectedPage\"}\r\n              onClick={(e) => {\r\n                props.onPageChanged(p);\r\n              }}\r\n            >\r\n              {p}\r\n            </span>\r\n          );\r\n        })}\r\n      </div>\r\n      {props.users.map((u) => (\r\n        <div className=\"user\" key={u.id}>\r\n          <span className=\"Users\">\r\n            <div>\r\n              <NavLink to={\"/Profile/\" + u.id}>\r\n                <img\r\n                  src={\r\n                    u.photos.small != null\r\n                      ? u.photos.small\r\n                      : \"https://vk.com/images/camera_100.png?ava=1\"\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {u.followed ? (\r\n                <button disabled = {props.followingInProgress.some(id => id == u.id)}\r\n                  onClick={() => {\r\n                    props.follow(u.id)\r\n                  }}\r\n                >\r\n                  Unfollow\r\n                </button>\r\n              ) : (\r\n                <button disabled = {props.followingInProgress.some(id => id == u.id)}\r\n                  onClick={() => {\r\n                    props.unfollow(u.id)\r\n                  }}\r\n                >\r\n                  Follow\r\n                </button>\r\n              )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{u.name}</div>\r\n              <div>{u.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"u.location.country\"}</div>\r\n              <div>{\"u.location.city\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Users;\r\n","import { act } from \"react-dom/test-utils\";\r\nimport { usersAPI } from \"../API/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n  fake:10\r\n};\r\n\r\nlet usersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FAKE\":\r\n      return{\r\n        ...state,\r\n        fake:state.fake + 1\r\n      }\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.id) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.id) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (id) => {\r\n  return {\r\n    type: FOLLOW,\r\n    id,\r\n  };\r\n};\r\nexport const unfollowSuccess = (id) => {\r\n  return {\r\n    type: UNFOLLOW,\r\n    id,\r\n  };\r\n};\r\nexport const setUsers = (users) => {\r\n  return {\r\n    type: SET_USERS,\r\n    users,\r\n  };\r\n};\r\nexport const setCurrentPage = (currentPage) => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: currentPage,\r\n  };\r\n};\r\nexport const setUsersTotalCount = (totalUsersCount) => {\r\n  return {\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    count: totalUsersCount,\r\n  };\r\n};\r\nexport const toggleIsFetching = (isFetching) => {\r\n  return {\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching,\r\n  };\r\n};\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n  return {\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId,\r\n  };\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return (dispatch) => {\r\n      dispatch(toggleIsFetching(true))\r\n\r\n      usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setUsersTotalCount(data.totalCount));\r\n      })\r\n    }\r\n};\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId).then(response => {\r\n      if (response.data.resultCode == 0){\r\n        dispatch(followSuccess(userId));  \r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n  });\r\n}\r\n};\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    usersAPI.follow(userId).then(response => {\r\n      if (response.data.resultCode == 0){\r\n        dispatch(unfollowSuccess(userId));\r\n      }\r\n      dispatch(toggleFollowingProgress(false, userId));\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport default usersReducer;\r\n","import { createSelector } from \"reselect\"\r\n\r\n\r\nexport const getUsersListSelector = (state) =>{\r\n    return state.Users.users\r\n}\r\nexport const getUsersList = createSelector(getUsersListSelector, (users) =>{return users.filter(u => true)})\r\n\r\nexport const getPageSize = (state) =>{\r\n    return state.Users.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) =>{\r\n    return state.Users.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) =>{\r\n    return state.Users.currentPage\r\n}\r\nexport const getIsFetching = (state) =>{\r\n    return state.Users.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) =>{\r\n    return state.Users.followingInProgress\r\n}\r\nexport const countSmthDifficult = (state) =>{\r\n    return \r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './Users';\r\nimport { AuthRedirect } from '../../HOC/AuthRedirect';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/usersReducer';\r\nimport Preloader from './Spinner-1s-200px.svg'\r\nimport { compose } from 'redux';\r\nimport {getUsersList, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress} from '../../redux/users-selectors'\r\nimport { Redirect } from \"react-router-dom\";\r\nclass UsersContainers extends React.Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n    }\r\n    componentDidMount(){\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n    onPageChanged = (pageNumber) =>{\r\n      this.props.getUsers(pageNumber, this.props.pageSize);\r\n    }\r\n    render(){\r\n      return <>{this.props.isFetching ? <div className ='loader'><img src ={Preloader}/></div> :null}<Users followingInProgress ={this.props.followingInProgress}  totalUsersCount ={this.props.totalUsersCount} pageSize = {this.props.pageSize} currentPage={this.props.currentPage} onPageChanged ={this.onPageChanged} users={this.props.users} follow={this.props.follow} unfollow={this.props.unfollow}/>   \r\n    </>};\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n  return{\r\n      users: getUsersList(state),\r\n      pageSize: getPageSize(state),\r\n      totalUsersCount: getTotalUsersCount(state),\r\n      currentPage: getCurrentPage(state),\r\n      isFetching: getIsFetching(state),\r\n      followingInProgress: getFollowingInProgress(state),\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    follow,\r\n    unfollow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    getUsers\r\n}\r\n\r\nexport default compose(AuthRedirect, connect(mapStateToProps, mapDispatchToProps))(UsersContainers)","import { authAPI } from \"../API/api\"\r\nimport { stopSubmit } from \"redux-form\"\r\n\r\nconst { act } = require(\"@testing-library/react\")\r\n\r\nconst SET_USER_DATA = 'CONST_USER_DATA'\r\n\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email:null,\r\n    login: null,\r\n    isAuth:false\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case SET_USER_DATA:\r\n            return{\r\n              ...state,\r\n              ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>{\r\n    return{\r\n        type:SET_USER_DATA,\r\n        payload:{userId, email, login, isAuth}\r\n    }\r\n} \r\n\r\nexport const Auth = () =>{\r\n    return (dispatch) =>{\r\n        return authAPI.me().then(response =>{\r\n            if (response.data.resultCode === 0){\r\n                let {id, email, login} = response.data.data;\r\n                dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const Login = (email, password, rememberMe) =>{\r\n    return (dispatch) =>{\r\n        authAPI.login(email, password, rememberMe).then(response =>{\r\n            if (response.data.resultCode === 0){\r\n                dispatch(Auth())\r\n            } else{\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some errors'\r\n                dispatch(stopSubmit('Loggins', {_error: message}))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const Logout = () =>{\r\n    return (dispatch) =>{\r\n        authAPI.logout().then(response =>{\r\n            if (response.data.resultCode === 0){\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer","import {Auth} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\nconst SET_SIDEBAR = \"SET_SIDEBAR\";\r\n\r\nlet initialState = {\r\n  initialized: false,\r\n  side: true\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_INITIALIZED:\r\n      return {\r\n        ...state,\r\n        initialized: true,\r\n      };\r\n    case SET_SIDEBAR:\r\n      return{\r\n        ...state,\r\n        side: action.sides\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccsess = () => ({ type: SET_INITIALIZED });\r\n\r\nexport const setSidebar = (sides) =>({\r\n    type: SET_SIDEBAR,\r\n    sides\r\n})\r\n\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(Auth());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(initializedSuccsess());\r\n  });\r\n};\r\n\r\nexport default appReducer;\r\n","import React from \"react\";\r\nimport { setSidebar } from \"../../redux/appReducer\";\r\n\r\nconst Burger = (props) => {\r\n  \r\n  function seeSidebar(sides){\r\n    alert('hi')\r\n    setSidebar(true)\r\n  }\r\n \r\n\r\n  return (\r\n    <div onClick ={seeSidebar} className=\"Burger\">\r\n      <span className=\"Pal1\"></span>\r\n      <span className=\"Pal2\"></span>\r\n      <span className=\"Pal3\"></span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Burger from \"./Burger\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Header(props) {\r\n\r\n  \r\n  return (\r\n    <header>\r\n      <Burger  />\r\n      <h1>Vkoontookte</h1>\r\n      <div className=\"loginBlock\">\r\n        {props.isAuth ? <div>{props.login} - <button onClick ={props.Logout}>Logout</button></div> : <NavLink to={\"/Login\"}>Login</NavLink>}\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Header","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {Logout} from '../../redux/auth-reducer';\r\nimport * as axios from 'axios';\r\nimport Header from \"./Header\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <Header {...this.props}/>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        side: state.app.side\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    Logout,\r\n   \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);\r\n","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { requierd, maxLengthCreator } from \"../Utils/Validators/validators\";\r\nimport {Login} from '../redux/auth-reducer';\r\nimport { Inputarea } from \"../common/FormsControls/formsControl\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport style from '../common/FormsControls/FormStyles.module.css' \r\nconst maxLength10 = maxLengthCreator(30);\r\n\r\nfunction Logins(props) {\r\n  const onSubmit = (formData) =>{\r\n    props.Login(formData.email, formData.password, formData.rememberMe);\r\n  }\r\n\r\n\r\n  if (props.isAuth){\r\n    return <Redirect to = {'/Profile'} />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm onSubmit = {onSubmit}/>\r\n    </div>\r\n  );\r\n}\r\nfunction LoginForm(props) {\r\n\r\n    return (\r\n      <form onSubmit ={props.handleSubmit} action=\"\">\r\n        <div>\r\n          <Field validate ={[requierd, maxLength10]} placeholder={\"Email\"} name ={'email'} component = {Inputarea} />\r\n        </div>\r\n        <div>\r\n          <Field validate ={[requierd, maxLength10]} placeholder={\"Password\"} type={'password'} name ={'password'} component = {Inputarea}/>\r\n        </div>\r\n        <div className = 'input_flex'>\r\n          <Field validate ={[ maxLength10]} type={\"checkbox\"} name ={'rememberMe'} component = {Inputarea}/> <div>Remember me</div>\r\n        </div>\r\n        {props.error && <div className = {style.error}>\r\n          {props.error}\r\n        </div>}\r\n        <div>\r\n          <button>Login</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'Loggins'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) =>({\r\n  isAuth : state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {Login})(Logins);\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(true);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(false);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(true);\r\n    props.updateStatus(status);\r\n  };\r\n  function deactivateEditModeEnter(event) {\r\n    if (event.keyCode === 13) {\r\n      setEditMode(true);\r\n      props.updateStatus(status);\r\n    }\r\n    return;\r\n  }\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || '-----'}</span>\r\n        </div>\r\n      )}\r\n      {!editMode && (\r\n        <div>\r\n          <input\r\n            onKeyDown={deactivateEditModeEnter}\r\n            value={status}\r\n            autoFocus={true}\r\n            onBlurCapture={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nfunction Body_Frofile_flex(props) {\r\n  if (!props.profile){\r\n    return <div className ='loading' />\r\n  }\r\n  return (\r\n    <div className=\"body_mini_flex_profile\">\r\n      <div className=\"imgssss\">\r\n        <img src={props.profile.photos.large} />\r\n      </div>\r\n      <div className=\"about_profile\">\r\n        <h1>{props.profile.fullName}</h1>\r\n        <ProfileStatusWithHooks status ={props.status} updateStatus ={props.updateStatus}/>\r\n        {props.profile.lookingForAJob ? <h2>Ищет дура <br/> Охуенный спец</h2> : <h2>Не ищет дура</h2>}\r\n        <h2>{props.profile.contacts.github}</h2>\r\n        <h2>{props.profile.contacts.vk}</h2>\r\n        <h2>{props.profile.contacts.facebook}</h2>\r\n        <h2>{props.profile.contacts.instagram}</h2>\r\n        <h2>{props.profile.contacts.twitter}</h2>\r\n        <h2>{props.profile.contacts.website}</h2>\r\n        <h2>{props.profile.contacts.youtube}</h2>\r\n        <h2>{props.profile.contacts.mainLink}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Body_Frofile_flex;\r\n","import React from \"react\";\r\nfunction Post(props) {\r\n  return (\r\n    <div className=\"Post\" id = {props.id}>\r\n      <div className=\"flex_posts\">\r\n        <img\r\n          src=\"https://st2.depositphotos.com/5266903/8135/v/450/depositphotos_81358350-stock-illustration-%D0%BF%D0%BB%D0%BE%D1%81%D0%BA%D0%B8%D0%B9-%D0%B7%D0%BD%D0%B0%D1%87%D0%BE%D0%BA-%D0%BA%D0%BB%D0%B8%D0%B5%D0%BD%D1%82%D0%B0.jpg\"\r\n          alt=\"\"\r\n        />\r\n        <h1>{props.message}</h1>\r\n        <span>Likes {props.likes}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Post;\r\n","import React from \"react\";\r\nimport {reset} from 'redux-form';\r\nimport Post from \"./Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  requierd,\r\n  maxLengthCreator,\r\n} from \"../../../../Utils/Validators/validators\";\r\nimport { Textarea } from \"../../../../common/FormsControls/formsControl\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nfunction Posts(props) {\r\n  let state = props.Profile;\r\n  let Post_info_main = state.Post_info.map((p) => (\r\n    <Post message={p.message} id={p.id} likes={p.likes} store={props.store} />\r\n  ));\r\n  let onSendPost = (values, dispatch) => {\r\n    props.sendPostCreator(values.value_Arrea);\r\n    dispatch(reset('Profile'));\r\n  };\r\n  return (\r\n    <div className=\"Posts\">\r\n      <h1>My posts</h1>\r\n      <FormReduxPost onSubmit={onSendPost} />\r\n      <div className=\"flex_like_post\">{Post_info_main}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function FormPost(props) {\r\n  return (\r\n    <form onSubmit={props.handleSubmit} action=\"\">\r\n      <Field\r\n        validate={[ requierd, maxLength10]}\r\n        component={Textarea}\r\n        placeholder=\"your news...\"\r\n        name={\"value_Arrea\"}\r\n        id=\"post_area\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n      ></Field>\r\n      <button className=\"but_post\">Send</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst FormReduxPost = reduxForm({ form: \"Profile\" })(FormPost);\r\n\r\nexport default Posts;\r\n","import { usersAPI, profileAPI } from \"../API/api\";\r\n\r\nconst SEND_POST = \"SEND_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_STATUS = \"SET_STATUS\";\r\n\r\nlet count = 0;\r\nlet initialState = {\r\n  Post_info: [],\r\n  profile: null,\r\n  status: \"\",\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SEND_POST: {\r\n      let bancha = action.value_Arrea;\r\n      let newPost = { id: 1, message: bancha, likes: count };\r\n      count = 0;\r\n      return {\r\n        ...state,\r\n        Post_info: [...state.Post_info, newPost],\r\n      };\r\n    }\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case SET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const sendPostCreator = (value_Arrea) => {\r\n  return {\r\n    type: SEND_POST,\r\n    value_Arrea,\r\n  };\r\n};\r\nexport const setUserProfile = (profile) => {\r\n  return {\r\n    type: SET_USER_PROFILE,\r\n    profile,\r\n  };\r\n};\r\nexport const setStatus = (status) => {\r\n  return {\r\n    type: SET_STATUS,\r\n    status,\r\n  };\r\n};\r\n\r\nexport const getUsersProfile = (userId) => {\r\n  return (dispatch) => {\r\n    usersAPI.getProfile(userId).then((response) => {\r\n      dispatch(setUserProfile(response.data));\r\n    });\r\n  };\r\n};\r\nexport const getStatus = (userId) => {\r\n  return (dispatch) => {\r\n    profileAPI.getStatus(userId).then((response) => {\r\n      dispatch(setStatus(response.data));\r\n    });\r\n  };\r\n};\r\nexport const updateStatus = (status) => {\r\n  return (dispatch) => {\r\n    profileAPI.updateStatus(status).then((response) => {\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n      }\r\n    });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Post from \"./Post\";\r\nimport Posts, { FormPost } from \"./Posts\";\r\nimport  {connect}  from \"react-redux\";\r\nimport {  sendPostCreator,} from \"../../../../redux/profileReducer\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    Profile: state.Profile,\r\n  };\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendPostCreator: (value_Arrea) => {\r\n      dispatch(sendPostCreator(value_Arrea));\r\n    },\r\n  };\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\nexport default PostsContainer\r\n\r\n\r\n","import React from \"react\";\r\nimport Body_Frofile_flex from \"./body_Profile_Flex/body_Profile_Flex\";\r\nimport Posts from \"./Posts/Posts\";\r\nimport  PostsContainer  from \"./Posts/PostsContainer\";\r\n\r\nfunction Body_Profile(props) {\r\n  return (\r\n    <div className=\"body_Profile\">\r\n      <img\r\n        src=\"http://wallpapers-image.ru/1920x1080/world/wallpapers/world-wallpapers-1920x1080-00013.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <Body_Frofile_flex status ={props.status} updateStatus ={props.updateStatus} profile ={props.profile}/>\r\n      <PostsContainer />\r\n    </div>\r\n  );\r\n}\r\nexport default Body_Profile;\r\n","import React from \"react\";\r\nimport Body_Profile from \"./body_Profile/body_Profile\";\r\nimport { Redirect } from \"react-router-dom\";\r\nfunction Profile(props) {\r\n  return (\r\n    <section className=\"Profile\">\r\n      <div className=\"wrpaper\">\r\n        <Body_Profile status ={props.status} updateStatus ={props.updateStatus} profile ={props.profile} />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUsersProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthRedirect } from \"../../HOC/AuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId){\r\n        this.props.history.push('./login')\r\n      }\r\n    }\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        profile={this.props.profile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.Profile.profile,\r\n    status: state.Profile.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = {\r\n  getUsersProfile,\r\n  getStatus,\r\n  updateStatus,\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withRouter,\r\n  AuthRedirect\r\n)(ProfileContainer);\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport DialogsContainer from \"./components/Messages/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./Login/Login\";\nimport {Auth} from '../src/redux/auth-reducer';\nimport ProfileContainer from \"./components/Profile/ProfileCotainer\";\nimport { render } from \"@testing-library/react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport {initializeApp, setSidebar} from './redux/appReducer'\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    \n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.initialized){\n      return <div className ='loader'></div>\n    }\n\n    return (\n      <BrowserRouter>\n        <div className=\"wrapper\">\n          <HeaderContainer />\n          <div className=\"wrapper_main\">\n            {this.props.side && (<Sidebar />) }\n            <Route\n              path=\"/Profile/:userId?\"\n              render={() => <ProfileContainer />}\n            />\n            <Route path=\"/Messages\" render={() => <DialogsContainer />} />\n            <Route path=\"/Users\" render={() => <UsersContainer />} />\n            <Route path=\"/Login\" render={() => <Login />} />\n          </div>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return{\n     initialized: state.app.initialized,\n     side: state.app.side\n  }\n}\n\nexport default compose(withRouter, connect(mapStateToProps, {initializeApp, setSidebar}))(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport { profileReducer } from \"./profileReducer\";\r\nimport { messagesReducer } from \"./messagesReducer\";\r\nimport authReducer from './auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n  Profile: profileReducer,\r\n  Messages: messagesReducer,\r\n  Users:usersReducer,\r\n  auth:authReducer,\r\n  form: formReducer,\r\n  app: appReducer,\r\n});\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\nexport default store;\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./redux/Store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n//setInterval(() =>{ store.dispatch({type:'FAKE'}, 1000)})\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}